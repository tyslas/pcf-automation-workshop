resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: platform-automation
    product_version: ((platform-automation-version))

- name: ops-manager 
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: ops-manager
    product_version: ((ops-manager-version))
    sorty_by: semver

   # configurations
- name: configuration
  type: git
  source:
    private_key: ((configuration_private_key))
    uri: ((configuration_uri))
    branch: ((configuration_branch))

- name: variable
  type: git
  source:
    private_key: ((configuration_private_key))
    uri: ((configuration_uri))
    branch: ((configuration_branch))

interpolate-creds: &interpolate-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    CREDHUB_CA_CERT: ((credhub-ca-cert))
    PREFIX: '/pipeline/lab09'
    INTERPOLATION_PATHS: ((labs-dir))/product-configs/versions ((labs-dir))/product-configs/secrets ((labs-dir))/auth
    SKIP_MISSING: true
  input_mapping:
    files: variable
  output_mapping:
    interpolated-files: interpolated-creds
jobs:
  - name: install-opsman
    serial: true
    serial_groups: [ install ]
    plan:
      - aggregate:
        - get: platform-automation-image
          resource: platform-automation
          params:
            globs: ["platform-automation-image*.tgz"]
            unpack: true
        - get: platform-automation-tasks
          resource: platform-automation
          params:
            globs: ["platform-automation-tasks*.zip"]
            unpack: true
        - get: variable
        - get: configuration
        - get: ops-manager-image
          resource: ops-manager
          params:
            globs: ["*.ova"]
      - task: interpolate-download-opsman-image-creds
        <<: *interpolate-creds
      - task: download-opsman-image
        image: platform-automation-image
        file: platform-automation-tasks/tasks/download-product.yml
        params:
          CONFIG_FILE: ((labs-dir))/product-configs/versions/opsman.yml
        input_mapping:
          config: interpolated-creds
        output_mapping:
          downloaded-product: opsman-image

      - task: create-vm
        image: platform-automation-image
        file: platform-automation-tasks/tasks/create-vm.yml
        input_mapping:
          image: opsman-image
          state: configuration
          config: variable
          secrets: interpolated-creds
        params:
          VARS_FILES: |
            config/((labs-dir))/product-configs/vars/opsman.yml
            secrets/((labs-dir))/product-configs/secrets/opsman.yml
          STATE_FILE: ((labs-dir))/state/state.yml
          OPSMAN_CONFIG_FILE: ((labs-dir))/product-configs/templates/opsman.yml
        ensure: &make-state-commit
          do:
            - task: make-commit
              image: platform-automation-image
              file: platform-automation-tasks/tasks/make-git-commit.yml
              input_mapping:
                repository: configuration
                file-source: generated-state
              output_mapping:
                repository-commit: configuration-commit
              params:
                FILE_SOURCE_PATH: state.yml
                FILE_DESTINATION_PATH: ((labs-dir))/state/state.yml
                GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
                GIT_AUTHOR_NAME: "Platform Automation Bot"
                COMMIT_MESSAGE: 'Update state file'
            - put: configuration
              params:
                repository: configuration-commit
                merge: true
#      - task: configure-authentication
#        image: platform-automation-image
#        file: platform-automation-tasks/tasks/configure-authentication.yml
#        attempts: 10
#        input_mapping:
#          env: configuration
#          config: interpolated-creds
#        params:
#          ENV_FILE: ((labs-dir))/auth/env.yml
#          AUTH_CONFIG_FILE: ((labs-dir))/auth/auth.yml
#      - task: configure-director
#        image: platform-automation-image
#        file: platform-automation-tasks/tasks/configure-director.yml
#        input_mapping:
#          config: interpolated-creds
#          env: interpolated-creds
#          vars: variable
#        params:
#          VARS_FILES: vars/((foundation))/vars/director-vars.yml
#          ENV_FILE: ((labs-dir))/env.yml
#          DIRECTOR_CONFIG_FILE: ((labs-dir))/config/director.yml
